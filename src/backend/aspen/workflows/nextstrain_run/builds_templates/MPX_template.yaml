builds:
  aspen:
    region: global
    country: {country}
    division: {division}
    location: {location}
    subsampling_scheme: {tree_type}
    title: CZ Gen Epi MPX Tree

# make sure build_name matches the sub-key of `builds` above.
# Not sure how to consolidate it, but not going to try to figure it out now.
build_name: "aspen"
auspice_name: "monkeypox_mpxv"

reference: "defaults/reference.fasta"
genome_annotation: "defaults/genome_annotation.gff3"
genbank_reference: "defaults/reference.gb"
include: "data/include.txt"  # add this to our template
clades: "defaults/clades.tsv"
lat_longs: "defaults/lat_longs.tsv"
auspice_config: "defaults/legacy_auspice_config_mpxv.json"
description: "defaults/description.md"
tree_mask: "defaults/tree_mask.tsv"

strain_id_field: "accession"
display_strain_field: "strain"

filter:
  min_date: 1950
  min_length: 100000

## align
max_indel: 10000
seed_spacing: 1000

## treefix
fix_tree: true

## refine
timetree: false
root: "min_dev"
clock_rate: 3e-6
clock_std_dev: 6e-6
divergence_units: "mutations"

traits:
  columns: ""
  sampling_bias_correction: 3

## recency
recency: true

mask:
  from_beginning: 1350
  from_end: 6422
  maskfile: "defaults/mask_overview.bed"

priorities:
  crowding_penalty: 0 # Gets set by treetype during `export.py`

## Subsampling schemas
subsampling:

  OVERVIEW:
    group:
      max_sequences: 500
      query: --query "(location == '{location}') & (division == '{division}')"

    state:
      max_sequences: 300
      query: --query "(location != '{location}') & (division == '{division}')" # exclude add'l samples from {location}
      priorities:
        type: "proximity"
        focus: "group"

    country:
      max_sequences: 300
      query: --query "(division != '{division}') & (country == '{country}')" # exclude add'l samples from CA
      priorities:
        type: "proximity"
        focus: "group"

    international:
      max_sequences: 300
      query: --query "(country != '{country}')" # exclude add'l samples from USA
      priorities:
          type: "proximity"
          focus: "group"

    international_serial_sampling:
      group_by: "region year" # lots of samples have no "month" so in order to include them, we'll only go by "year"
      seq_per_group: 2
      query: --query "(country != '{country}')"

  ########################

  TARGETED:
    focal:
      exclude: "--exclude-all"

    closest:
      max_sequences: 100
      priorities:
        type: "proximity"
        focus: "focal"

    group:
      max_sequences: 25
      query: --query "(location == '{location}') & (division == '{division}')"
      priorities:
        type: "proximity"
        focus: "focal"

    state:
      max_sequences: 25
      query: --query "(location != '{location}') & (division == '{division}')" # exclude add'l samples from {location}
      priorities:
        type: "proximity"
        focus: "focal"

    country:
      max_sequences: 25
      query: --query "(division != '{division}') & (country == '{country}')" # exclude add'l samples from CA
      priorities:
        type: "proximity"
        focus: "focal"

    international:
      max_sequences: 25
      query: --query "(country != '{country}')" # [Vince] huh? Original comment: "exclude add'l samples from USA"
      priorities:
        type: "proximity"
        focus: "focal"

    international_serial_sampling:
      group_by: "region year" # lots of samples have no "month" so in order to include them, we'll only go by "year"
      seq_per_group: 2
      query: --query "(country != '{country}')"

  ########################

  NON_CONTEXTUALIZED:
    group:
      group_by: "year"
      max_sequences: 1000
      query: --query "(location == '{location}') & (division == '{division}')"
